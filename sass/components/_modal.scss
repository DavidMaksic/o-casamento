@use '../base/base' as *;
@use '../abstracts/mixins' as *;

.modal {
   position: fixed;

   left: 0;
   top: 0;
   width: 100%;
   height: 100%;

   display: grid;
   grid-template-rows: 0.5fr 1fr 0.5fr 0.5fr;

   overflow-x: hidden;
   z-index: 88;

   background-color: rgba($color: #000000, $alpha: 0.7);
   backdrop-filter: blur(0.8rem);
   transition: all 0.3s;

   @include respond(phone) {
      grid-template-rows: 0.8fr 1fr 0.4fr 0.8fr;
   }

   &__content {
      position: relative;
      @include flex-column(0);
      justify-content: center;
   }

   &__previews {
      @include flex;
      gap: 0.5rem;

      @include respond(tab-land) {
         gap: 0.5vw;
      }
   }

   &__preview {
      height: 14vh;
      margin-top: var(--s-lg);
      opacity: 60%;
      cursor: pointer;
      transition: all 0.2s;

      @include respond(tab-land) {
         height: 10vh;
      }

      @include respond(phone) {
         height: 8vh;
      }

      // - Bellow 440px
      @media only screen and (max-width: 27.5em) {
         height: 7vh;
      }

      &:hover,
      &:active {
         opacity: 90%;
      }
   }

   &__image-box {
      display: none;
      align-self: center;
   }

   &__image {
      max-height: 70vh;

      @include respond(2k-desktop) {
         max-height: 65vh;
      }

      @include respond(tab-land) {
         max-height: 65vh;
         max-width: 100vh;
      }

      @include respond(tab-port) {
         max-height: 50vh;
      }

      @include respond(big-phone) {
         max-height: 40vh;
      }

      @include respond(phone) {
         max-height: 30vh;
         max-width: 100vw;
      }
   }

   &__close {
      position: absolute;
      top: -3vh;
      right: 3vw;
      width: 5rem;
      filter: invert(1) contrast(0.6);
      cursor: pointer;
      transition: filter 0.2s;

      @include respond(tab-land) {
         top: -6vh;
      }

      @include respond(tab-port) {
         top: -12vh;
      }

      @include respond(phone) {
         top: -22vh;
         right: 6vw;

         filter: invert(1) contrast(1);
      }

      &:hover,
      &:focus-visible {
         filter: invert(1) contrast(0.3);
      }
   }

   &__chevrons {
      position: absolute;
      top: 40%;
      width: var(--ws-xs);
      cursor: pointer;
      filter: invert(1) contrast(0.3);

      @include respond(phone) {
         filter: invert(1) contrast(1);
         width: 6rem;
      }

      &--1 {
         left: 5rem;
         transition: transform 0.5s, filter 0.2s;

         @include respond(tab-land) {
            left: 0;
         }

         &:hover {
            transform: translateX(-1rem);
            filter: invert(1) contrast(0.01);
         }
      }

      &--2 {
         right: 5rem;
         transition: transform 0.5s, filter 0.2s;

         @include respond(tab-land) {
            right: 0;
         }

         &:hover {
            transform: translateX(1rem);
            filter: invert(1) contrast(0.01);
         }
      }
   }

   // - Hide modal
   opacity: 0;
   pointer-events: none;
   visibility: hidden;
}

// - Show modal
.open-lightbox {
   opacity: 1;
   pointer-events: auto;
   visibility: visible;
}

// - Highlight current preview
.active-preview {
   opacity: 1;
}
